package browsers;

import java.time.Duration;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.edge.EdgeDriver;
import org.openqa.selenium.edge.EdgeOptions;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxOptions;
import org.openqa.selenium.remote.DesiredCapabilities;

import driver.Driver;

public class Navegadores extends Driver {

    private String navegadorEscolhido;

    public Navegadores(String navegador) {
        setNavegadorEscolhido(navegador);
    }

	private void setNavegadorEscolhido(String navegador) {
		
		this.navegadorEscolhido = navegador;		
	}

	@SuppressWarnings("deprecation")
	public WebDriver configurarDriver() {
        WebDriver driver;
        if (navegadorEscolhido.equalsIgnoreCase("chrome")) {
            System.setProperty("webdriver.chrome.driver", "./Driver/chromedriver.exe");
            DesiredCapabilities caps = new DesiredCapabilities();
            caps.setAcceptInsecureCerts(false);
            ChromeOptions chromeOptions = new ChromeOptions();
            driver = new ChromeDriver(caps);
        } else if (navegadorEscolhido.equalsIgnoreCase("firefox")) {
            System.setProperty("webdriver.gecko.driver", "./Driver/geckodriver.exe");
            FirefoxOptions firefoxOptions = new FirefoxOptions();
            driver = new FirefoxDriver(firefoxOptions);
        } else if (navegadorEscolhido.equalsIgnoreCase("edge")) {
            System.setProperty("webdriver.edge.driver", "./Driver/msedgedriver.exe");
            EdgeOptions edgeOptions = new EdgeOptions();
            edgeOptions.addArguments("--remote-allow-origins=*");
            driver = new EdgeDriver(edgeOptions);
        } else {
            throw new IllegalArgumentException("Navegador inválido: " + navegadorEscolhido);
        }
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
        driver.manage().window().maximize();
        return driver;
    }
}